# Generated by Django 3.2.7 on 2022-05-29 06:29

import django.db.models.manager
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('media', '0003_auto_20220521_1115'),
        ('bussiness', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Issues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否删除')),
                ('created_at', models.DateTimeField(auto_now=True, null=True, verbose_name='数据创建时间')),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='数据更新时间')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='数据失效时间')),
                ('title', models.CharField(max_length=225, verbose_name='动态标题')),
                ('status',
                 models.CharField(choices=[('draft', '草稿'), ('published', '发布'), ('abandoned', '废弃')], default='draft',
                                  max_length=20, verbose_name='状态')),
                ('content', models.TextField(verbose_name='动态内容')),
                ('version', models.IntegerField(default=0, verbose_name='版本')),
                ('categories', models.ManyToManyField(to='bussiness.Category', verbose_name='分类')),
                ('medias', models.ManyToManyField(to='media.File', verbose_name='图片和视频')),
                ('origin',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='origin_issues',
                                   to='square.issues', verbose_name='原动态')),
                ('publisher',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL,
                                   verbose_name='发布者')),
                ('tags', models.ManyToManyField(to='bussiness.Tag', verbose_name='标签')),
            ],
            options={
                'verbose_name': '动态',
                'verbose_name_plural': '动态',
                'db_table': 'issues',
            },
            managers=[
                ('logic_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否删除')),
                ('created_at', models.DateTimeField(auto_now=True, null=True, verbose_name='数据创建时间')),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='数据更新时间')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='数据失效时间')),
                ('content', models.TextField(verbose_name='回复内容')),
                ('issues', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='square.issues',
                                             verbose_name='对应动态')),
                ('medias', models.ManyToManyField(to='media.File', verbose_name='图片和视频')),
                ('publisher',
                 models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL,
                                   verbose_name='回复者')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING,
                                            related_name='re_reply', to='square.reply', verbose_name='对应回复')),
            ],
            options={
                'verbose_name': '动态回复',
                'verbose_name_plural': '动态回复',
                'db_table': 'replies',
            },
            managers=[
                ('logic_objects', django.db.models.manager.Manager()),
            ],
        ),
    ]
